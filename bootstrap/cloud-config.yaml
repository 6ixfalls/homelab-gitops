#cloud-config

# debug: true
users:
  - name: six
    shell: /bin/bash
    groups: [admin]
    ssh_authorized_keys: [github:6ixfalls]

strict: true

install:
  device: /dev/sda
  auto: true
  reboot: true
  extra-dirs-rootfs: &longhorn [/var/lib/longhorn]

upgrade:
  extra-dirs-rootfs: *longhorn
reset:
  extra-dirs-rootfs: *longhorn

growpart:
  devices: ["/"]

stages:
  after-install-chroot:
    - name: Format Longhorn disk
      if: "[ -e /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn ] && [ ! -e /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn-part1 ]"
      commands:
        - parted /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn --script -a optimal -- mklabel gpt mkpart longhorn ext4 0% 100%
    # -- (only `commands`,`entities` and `files` may have templating)
    - name: "Add control plane or worker config determined by mac address"
      files:
        - path: /oem/60_k3s_config.yaml
          permissions: 0666
          content: |
            #cloud-config
            {{- $control := false -}}
            {{- $first := false -}}
            {{- $macs := list "bc:24:11:ca:7b:77" "bc:24:11:fa:f2:eb" "bc:24:11:97:43:81" -}}
            {{- range $net := .Values.network -}}
              {{- if has $net.macaddress $macs -}}
                {{- $control = true -}}
              {{- end -}}
              {{- if eq $net.macaddress (first $macs) -}}
                {{- $first = true -}}
              {{ end -}}
            {{- end -}}
            {{- if $control }}
            k3s:
              enabled: true
              env:
                K3S_TOKEN: "{{ P2P_NETWORK_TOKEN }}"
              args:
            {{- if $first }}
                - --cluster-init
            {{- else }}
                - --server https://10.17.4.111:6443
            {{- end }}
                - --tls-san "10.17.4.111"
                - --disable traefik,servicelb,local-storage
                - --flannel-backend none
                - --disable-network-policy
                - --write-kubeconfig-mode 0644
                - --node-taint node-role.kubernetes.io/control-plane:NoSchedule
                - --disable-kube-proxy
            {{- else }}
            k3s-agent:
              enabled: true
              env:
                K3S_TOKEN: "{{ P2P_NETWORK_TOKEN }}"
              args:
                - --server https://10.17.4.111:6443
                - --node-label "node.longhorn.io/create-default-disk=true"
            {{- end }}
            {{- if $first }}
            stages:
              reconcile:
                - name: "Drop external secret"
                  if: "[ ! -e /var/lib/rancher/k3s/server/manifests/cluster-secrets.yaml ] && [ -e /etc/rancher/k3s/k3s.yaml ]"
                  files:
                    - path: /var/lib/rancher/k3s/server/manifests/cluster-secrets.yaml
                      content: |
                        apiVersion: v1
                        data:
                          environment: {{ INFISICAL_ENVIRONMENT }}
                          clientId: {{ INFISICAL_ID }}
                          clientSecret: {{ INFISICAL_SECRET }}
                          projectSlug: {{ INFISICAL_PROJECT }}
                          infisicalToken: {{ INFISICAL_TOKEN }}
                          clusterDomain: {{ CLUSTER_DOMAIN }}
                        kind: Secret
                        metadata:
                          name: cluster-secrets
                          namespace: flux-system
                - name: "Add cluster-specific manifests"
                  if: "[ ! -e /var/lib/rancher/k3s/server/manifests/bootstrap.applied ] && [ -e /etc/rancher/k3s/k3s.yaml ]"
                  files:
                    - path: /tmp/bootstrap-manifest.sh
                      content: |
                        #!/bin/bash
                        set -x -e
                        # General
                        kubectl apply --server-side --kustomize github.com/6ixfalls/homelab-gitops.git//bootstrap/manifests
                        # Flux
                        kubectl apply --server-side --kustomize github.com/6ixfalls/homelab-gitops.git//bootstrap
                        kubectl apply --server-side --kustomize github.com/6ixfalls/homelab-gitops.git//clusters/hutao/flux/config
                        touch /var/lib/rancher/k3s/server/manifests/flux.applied
                      permissions: 0777
                  commands:
                    - "KUBECONFIG=/etc/rancher/k3s/k3s.yaml nohup /bin/bash /tmp/flux-manifest.sh > /tmp/flux-apply.out 2>&1 &"
            {{- end }}
  # -- https://github.com/derailed/k9s/issues/1399
  initramfs:
    - name: Increase number of open files
      sysctl:
        fs.inotify.max_user_instances: "8192"
        fs.inotify.max_user_watches: "524288"
  boot:
    - name: "Format longhorn filesystem if unformatted"
      if: "[ -e /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn ] && [ -e /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn-part1 ] && [[ ! $(fsck -n dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn-part1) ]]"
      commands:
        - mkfs.ext4 -F /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn-part1
    - name: "Mount longhorn filesystem"
      if: "[ -e /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn ] && [ -e /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn-part1 ]"
      commands:
        # -- https://github.com/kairos-io/packages/blob/3482fed51f21a2155b60a0aa9ac91b1d839d1029/packages/static/kairos-overlay-files/files/system/oem/00_rootfs_uki.yaml#L43
        - umount /var/lib/longhorn
        - mount -o rw /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_longhorn-part1 /var/lib/longhorn
    - name: "Set up various kube environment variables"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
        CONTAINERD_NAMESPACE: k8s.io
